generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  email String @unique 

  name String
  imageUrl String @db.Text

  servers Server[]
  members Member[]
  channels Channel[]
}

model Server {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  imageUrl String @db.Text
  inviteCode String @unique 

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  @@index([profileId])

  members Member[]
  channels Channel[]
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role MemberRole

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  @@index([profileId])

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  @@index([serverId])
}

enum ChannelType {
  TEXT
  VOICE
}

model Channel {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  type ChannelType

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  @@index([serverId])

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  @@index([profileId])
}